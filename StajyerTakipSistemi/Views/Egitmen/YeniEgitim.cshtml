@model StajyerTakipSistemi.Models.ViewModels.YeniEgitimViewModel
@{
    ViewData["Title"] = "Yeni Eğitim Oluştur";
    Layout = null;
}

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Yeni Eğitim Oluştur</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 30%, #dee2e6 100%);
            min-height: 100vh;
            position: relative;
        }

        /* Animated background particles */
        .bg-animation {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            overflow: hidden;
            z-index: 0;
            pointer-events: none;
        }

        .particle {
            position: absolute;
            background: radial-gradient(circle, rgba(46, 125, 50, 0.3), rgba(27, 94, 32, 0.1));
            border-radius: 50%;
            animation: floatAndFade 8s ease-in-out infinite;
        }

            .particle:nth-child(1) {
                width: 100px;
                height: 100px;
                left: 15%;
                top: 20%;
                animation-delay: 0s;
            }

            .particle:nth-child(2) {
                width: 80px;
                height: 80px;
                left: 75%;
                top: 60%;
                animation-delay: 3s;
            }

            .particle:nth-child(3) {
                width: 120px;
                height: 120px;
                left: 85%;
                top: 10%;
                animation-delay: 6s;
            }

        @@keyframes floatAndFade {
            0%

        {
            opacity: 0;
            transform: translateY(20px) scale(0.8);
        }

        25% {
            opacity: 0.4;
            transform: translateY(-10px) scale(1);
        }

        50% {
            opacity: 0.6;
            transform: translateY(-20px) scale(1.1);
        }

        75% {
            opacity: 0.3;
            transform: translateY(-15px) scale(0.9);
        }

        100% {
            opacity: 0;
            transform: translateY(10px) scale(0.7);
        }

        }

        .header {
            background: #2d5016;
            color: white;
            padding: 1rem 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 4px 20px rgba(45, 80, 22, 0.4);
            position: relative;
            z-index: 999;
            height: 70px;
        }

            .header h1 {
                font-size: 1.5rem;
                font-weight: 600;
                margin: 0;
                color: white;
            }

        .user-info {
            display: flex;
            align-items: center;
            gap: 15px;
            color: white;
        }

        .user-avatar {
            width: 35px;
            height: 35px;
            background: white;
            color: #2d5016;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
        }

        .logout-btn {
            background: white;
            color: #2d5016;
            border: 1px solid rgba(255, 255, 255, 0.3);
            padding: 8px 16px;
            border-radius: 20px;
            text-decoration: none;
            font-size: 0.9rem;
            font-weight: 500;
            transition: all 0.3s ease;
        }

            .logout-btn:hover {
                background: rgba(255, 255, 255, 0.9);
                color: #2d5016;
                text-decoration: none;
                transform: translateY(-2px);
            }

        /* Hamburger Menu */
        .hamburger-menu {
            position: fixed;
            top: 80px;
            left: 20px;
            z-index: 1000;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border: none;
            border-radius: 12px;
            padding: 15px;
            cursor: pointer;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            width: 50px;
            height: 50px;
        }

            .hamburger-menu:hover {
                background: rgba(255, 255, 255, 1);
                transform: scale(1.05);
            }

        .hamburger-icon {
            width: 24px;
            height: 18px;
            position: relative;
            transition: 0.3s ease-in-out;
        }

            .hamburger-icon span {
                display: block;
                position: absolute;
                height: 3px;
                width: 100%;
                background: #2d5016;
                border-radius: 3px;
                transition: 0.3s ease-in-out;
            }

                .hamburger-icon span:nth-child(1) {
                    top: 0px;
                }

                .hamburger-icon span:nth-child(2) {
                    top: 7px;
                }

                .hamburger-icon span:nth-child(3) {
                    top: 14px;
                }

        /* Hamburger animasyonu */
        .hamburger-menu.active .hamburger-icon span:nth-child(1) {
            top: 7px;
            transform: rotate(135deg);
        }

        .hamburger-menu.active .hamburger-icon span:nth-child(2) {
            opacity: 0;
            left: -60px;
        }

        .hamburger-menu.active .hamburger-icon span:nth-child(3) {
            top: 7px;
            transform: rotate(-135deg);
        }

        /* Layout container */
        .layout-container {
            display: flex;
            height: calc(100vh - 70px);
            position: relative;
            transition: all 0.3s ease;
        }

        /* Sidebar */
        .sidebar {
            width: 280px;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            box-shadow: 2px 0 15px rgba(0, 0, 0, 0.1);
            border-right: 1px solid rgba(76, 175, 80, 0.2);
            transition: all 0.3s ease;
            position: relative;
            z-index: 998;
            overflow-y: auto;
            padding-top: 5rem;
        }

            /* Sidebar kapalı*/
            .sidebar.collapsed {
                width: 80px;
            }

                .sidebar.collapsed .menu-text {
                    display: none;
                }

                .sidebar.collapsed a {
                    justify-content: center;
                    padding: 18px 12px;
                }

                    .sidebar.collapsed a span:first-child {
                        margin: 0;
                        font-size: 1.3rem;
                    }

            /* Sidebar menü stilleri  */
            .sidebar ul {
                list-style: none;
                padding: 0 1rem;
                margin: 0;
            }

            .sidebar li {
                margin-bottom: 8px;
            }

            .sidebar a {
                text-decoration: none;
                color: #333;
                display: flex;
                align-items: center;
                gap: 12px;
                font-weight: 500;
                transition: all 0.3s;
                padding: 16px 18px;
                border-radius: 12px;
                white-space: nowrap;
            }

                .sidebar a:hover {
                    color: #2e7d32;
                    background: rgba(76, 175, 80, 0.1);
                }

            .sidebar .active {
                color: #2e7d32 !important;
                font-weight: 600;
                background: rgba(76, 175, 80, 0.15);
                border-left: 3px solid #4caf50;
            }

        /* Sidebar overlay */
        .sidebar-overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 997;
            transition: opacity 0.3s ease;
        }

            .sidebar-overlay.active {
                display: block;
            }

        /* Main content */
        .main-content {
            flex: 1;
            overflow-y: auto;
            transition: all 0.3s ease;
            position: relative;
        }

        /* Content padding  */
        .content-wrapper {
            padding: 2rem;
            margin-left: 80px;
            transition: all 0.3s ease;
        }

        .layout-container:not(.sidebar-collapsed) .content-wrapper {
            margin-left: 0;
            padding: 2rem 2rem 2rem 1rem;
        }

        .page-header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(76, 175, 80, 0.2);
            border-left: 5px solid #4caf50;
        }

        .page-title {
            font-size: clamp(1.5rem, 4vw, 2.2rem);
            color: #1b5e20;
            margin: 0 0 0.5rem 0;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .page-subtitle {
            color: #666;
            font-size: clamp(0.9rem, 2.5vw, 1.1rem);
            line-height: 1.6;
        }

        .form-container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 2rem;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(76, 175, 80, 0.2);
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

            .form-group label {
                display: block;
                margin-bottom: 0.5rem;
                font-weight: 600;
                color: #1b5e20;
                font-size: 0.9rem;
            }

        .form-control {
            width: 100%;
            padding: 0.75rem;
            border: 2px solid rgba(76, 175, 80, 0.3);
            border-radius: 12px;
            font-size: 1rem;
            transition: all 0.3s;
            box-sizing: border-box;
            background: rgba(255, 255, 255, 0.8);
        }

            .form-control:focus {
                outline: none;
                border-color: #4caf50;
                background: white;
                box-shadow: 0 0 0 3px rgba(76, 175, 80, 0.1);
            }

        textarea.form-control {
            min-height: 120px;
            resize: vertical;
            font-family: inherit;
        }

        .checkbox-group {
            max-height: 300px;
            overflow-y: auto;
            border: 2px solid rgba(76, 175, 80, 0.3);
            border-radius: 12px;
            padding: 1rem;
            background: rgba(255, 255, 255, 0.8);
        }

        .checkbox-item {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.7rem;
            border: 2px solid rgba(76, 175, 80, 0.2);
            border-radius: 12px;
            margin-bottom: 0.5rem;
            transition: all 0.3s;
            cursor: pointer;
            background: rgba(255, 255, 255, 0.9);
        }

            .checkbox-item:last-child {
                margin-bottom: 0;
            }

            .checkbox-item:hover {
                background: rgba(76, 175, 80, 0.05);
                border-color: #4caf50;
                transform: translateY(-1px);
            }

            .checkbox-item input[type="checkbox"] {
                width: 18px;
                height: 18px;
                cursor: pointer;
                accent-color: #4caf50;
            }

            .checkbox-item label {
                margin: 0;
                cursor: pointer;
                flex: 1;
                font-weight: 500;
                color: #333;
            }

            .checkbox-item.selected {
                background: rgba(76, 175, 80, 0.1);
                border-color: #4caf50;
                box-shadow: 0 2px 8px rgba(76, 175, 80, 0.15);
            }

        .btn {
            padding: 0.75rem 2rem;
            border: none;
            border-radius: 12px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            transition: all 0.3s;
        }

        .btn-primary {
            background: linear-gradient(135deg, #4caf50, #2e7d32);
            color: white;
        }

            .btn-primary:hover {
                background: linear-gradient(135deg, #2e7d32, #1b5e20);
                transform: translateY(-2px);
                box-shadow: 0 4px 15px rgba(76, 175, 80, 0.4);
                color: white;
                text-decoration: none;
            }

        .btn-secondary {
            background: linear-gradient(135deg, #6c757d, #495057);
            color: white;
        }

            .btn-secondary:hover {
                background: linear-gradient(135deg, #495057, #343a40);
                text-decoration: none;
                color: white;
                transform: translateY(-2px);
                box-shadow: 0 4px 15px rgba(108, 117, 125, 0.4);
            }

        .btn-selection {
            padding: 0.5rem 1rem;
            font-size: 0.9rem;
            margin-right: 0.5rem;
            margin-bottom: 1rem;
        }

        .btn-select-all {
            background: linear-gradient(135deg, #17a2b8, #138496);
            color: white;
        }

            .btn-select-all:hover {
                background: linear-gradient(135deg, #138496, #117a8b);
                color: white;
                text-decoration: none;
                transform: translateY(-2px);
                box-shadow: 0 4px 15px rgba(23, 162, 184, 0.4);
            }

        .btn-clear-all {
            background: linear-gradient(135deg, #dc3545, #c82333);
            color: white;
        }

            .btn-clear-all:hover {
                background: linear-gradient(135deg, #c82333, #bd2130);
                color: white;
                text-decoration: none;
                transform: translateY(-2px);
                box-shadow: 0 4px 15px rgba(220, 53, 69, 0.4);
            }

        .form-actions {
            display: flex;
            gap: 1rem;
            justify-content: flex-end;
            margin-top: 2rem;
            padding-top: 2rem;
            border-top: 1px solid rgba(76, 175, 80, 0.2);
        }

        .alert {
            padding: 1rem;
            border-radius: 12px;
            margin-bottom: 1rem;
            transition: opacity 0.3s ease;
        }

        .alert-danger {
            background: rgba(244, 67, 54, 0.15);
            color: #c62828;
            border: 1px solid rgba(244, 67, 54, 0.3);
        }

        .selection-info {
            margin-top: 1rem;
            padding: 1rem;
            background: linear-gradient(135deg, rgba(76, 175, 80, 0.1), rgba(46, 125, 50, 0.1));
            border-left: 4px solid #4caf50;
            border-radius: 12px;
            font-weight: 500;
            color: #2e7d32;
        }

        .no-students {
            text-align: center;
            padding: 2rem;
            color: #c62828;
            background: rgba(244, 67, 54, 0.1);
            border-radius: 12px;
            border: 1px solid rgba(244, 67, 54, 0.3);
        }

        .no-students-icon {
            font-size: 3rem;
            margin-bottom: 1rem;
        }

        .date-time-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1rem;
        }

        .required-field::after {
            content: " *";
            color: #c62828;
            font-weight: bold;
        }

        .form-hint {
            font-size: 0.8rem;
            color: #666;
            margin-top: 0.3rem;
            font-style: italic;
        }

        /* Responsive */
        @@media (max-width: 1024px) {
            .sidebar

        {
            position: fixed;
            top: 70px;
            left: 0;
            height: calc(100vh - 70px);
            width: 280px;
            z-index: 998;
            transform: translateX(-100%);
            padding-top: 1rem;
        }

        .sidebar.active {
            transform: translateX(0);
        }

        .sidebar.collapsed {
            width: 280px;
        }

        .content-wrapper {
            margin-left: 80px !important;
            padding: 1rem !important;
        }

        }

        @@media (max-width: 768px) {
            .header

        {
            padding: 1rem;
        }

        .header h1 {
            font-size: 1.2rem;
        }

        .user-info span {
            display: none;
        }

        .content-wrapper {
            margin-left: 80px !important;
            padding: 1rem;
        }

        .date-time-grid {
            grid-template-columns: 1fr;
        }

        .form-actions {
            flex-direction: column;
        }

        .page-header {
            padding: 1.5rem;
        }

        }

        @@media (max-width: 480px) {
            .hamburger-menu

        {
            left: 10px;
            top: 75px;
        }

        .content-wrapper {
            margin-left: 70px !important;
            padding: 0.8rem;
        }

        }

        /* Animation keyframes */
        @@keyframes pageLoad {
            0%

        {
            opacity: 0;
            transform: translateY(20px);
        }

        100% {
            opacity: 1;
            transform: translateY(0);
        }

        }

        .layout-container {
            animation: pageLoad 0.8s ease-out forwards;
        }
    </style>
</head>
<body>
    <!-- Animated background -->
    <div class="bg-animation">
        <div class="particle"></div>
        <div class="particle"></div>
        <div class="particle"></div>
    </div>

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger" style="margin: 1rem 2rem;">
            <strong>❌ Hata!</strong> @TempData["Error"]
        </div>
    }

    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger" style="margin: 1rem 2rem;">
            <strong>❌ Form Hataları:</strong>
            <ul style="margin: 0.5rem 0 0 1.5rem;">
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <li>@error.ErrorMessage</li>
                }
            </ul>
        </div>
    }

    <div class="header">
        <h1>🌳 Eğitmen Paneli</h1>
        <div class="user-info">
            <div class="user-avatar">@(ViewBag.UserName?.Substring(0, 1).ToUpper() ?? "E")</div>
            <span>@(ViewBag.UserName ?? "Eğitmen") - Eğitmen</span>
            <a href="@Url.Action("Logout", "Auth")" class="logout-btn">Çıkış Yap</a>
        </div>
    </div>

    <!-- Hamburger Menu Button -->
    <button class="hamburger-menu" onclick="toggleSidebar()">
        <div class="hamburger-icon">
            <span></span>
            <span></span>
            <span></span>
        </div>
    </button>

    <!-- Overlay for mobile -->
    <div class="sidebar-overlay" onclick="closeSidebar()"></div>

    <div class="layout-container" id="layoutContainer">
        <aside class="sidebar" id="sidebar">
            <ul>
                <li><a href="@Url.Action("Index", "Egitmen")"><span>🏠</span> <span class="menu-text">Ana Sayfa</span></a></li>
                <li><a href="@Url.Action("StajyerListesi", "Egitmen")"><span>👥</span> <span class="menu-text">Stajyer Listesi</span></a></li>
                <li><a href="@Url.Action("BasvuruDegerlendirme", "Egitmen")"><span>📝</span> <span class="menu-text">Başvuru Değerlendirme</span></a></li>
                <li><a href="@Url.Action("OdevAtama", "Egitmen")"><span>✨</span> <span class="menu-text">Ödev Yönetimi</span></a></li>
                <li><a href="@Url.Action("EgitimYonetimi", "Egitmen")" class="active"><span>📆</span> <span class="menu-text">Eğitim & Toplantı Yönetimi</span></a></li>
                <li><a href="@Url.Action("DuyuruYonetimi", "Egitmen")"><span>📭</span> <span class="menu-text">Duyuru Yönetimi</span></a></li>
            </ul>
        </aside>

        <main class="main-content" id="mainContent">
            <div class="content-wrapper">
                <div class="page-header">
                    <h2 class="page-title">📆 Yeni Eğitim Oluştur</h2>
                    <p class="page-subtitle">Stajyerlere atanacak yeni bir eğitim programı oluşturun</p>
                </div>

                <div class="form-container">
                    <form asp-action="YeniEgitim" method="post" id="egitimForm">
                        <!-- Eğitim Adı -->
                        <div class="form-group">
                            <label asp-for="EgitimAdi" class="required-field">Eğitim Adı</label>
                            <input asp-for="EgitimAdi" class="form-control" placeholder="Örn: React Hooks Eğitimi, JavaScript ES6 Temelleri" required />
                            <span asp-validation-for="EgitimAdi" class="text-danger"></span>
                            <div class="form-hint">Eğitimin konusunu net bir şekilde ifade eden açıklayıcı bir isim seçin</div>
                        </div>

                        <!-- Açıklama -->
                        <div class="form-group">
                            <label asp-for="Aciklama">Eğitim Açıklaması</label>
                            <textarea asp-for="Aciklama" class="form-control" rows="4" placeholder="Eğitimin içeriği, öğrenilecek konular, ön koşullar ve hedefler hakkında detaylı bilgi verin..."></textarea>
                            <span asp-validation-for="Aciklama" class="text-danger"></span>
                            <div class="form-hint">Stajyerlerin eğitim hakkında bilgi sahibi olması için detaylı açıklama yazın</div>
                        </div>

                        <!-- Tarih ve Saat -->
                        <div class="date-time-grid">
                            <div class="form-group">
                                <label asp-for="Tarih" class="required-field">Eğitim Tarihi</label>
                                <input asp-for="Tarih" type="date" class="form-control" required />
                                <span asp-validation-for="Tarih" class="text-danger"></span>
                                <div class="form-hint">Geçmiş tarih seçilemez</div>
                            </div>

                            <div class="form-group">
                                <label asp-for="Saat" class="required-field">Eğitim Saati</label>
                                <input asp-for="Saat" type="time" class="form-control" required />
                                <span asp-validation-for="Saat" class="text-danger"></span>
                                <div class="form-hint">24 saat formatında saat seçin</div>
                            </div>
                        </div>

                        <!-- Stajyer Seçimi -->
                        <div class="form-group">
                            <label class="required-field">Stajyer Seçimi (Eğitime Katılacak Stajyerler)</label>
                            <div class="form-hint" style="margin-bottom: 1rem;">Eğitime katılmasını istediğiniz stajyerleri seçin. En az bir stajyer seçmelisiniz.</div>

                            <!-- Seçim Butonları -->
                            <div>
                                <button type="button" id="hepsiniSecBtn" class="btn btn-selection btn-select-all">
                                    ✅ Hepsini Seç
                                </button>
                                <button type="button" id="hepsiniKaldirBtn" class="btn btn-selection btn-clear-all">
                                    ❌ Seçimi Temizle
                                </button>
                            </div>

                            <!-- Stajyer Listesi -->
                            <div class="checkbox-group" id="stajyerListesi">
                                @if (ViewBag.AktifStajyerler != null && ((List<object>)ViewBag.AktifStajyerler).Any())
                                {
                                    @foreach (dynamic stajyer in ViewBag.AktifStajyerler)
                                    {
                                        <div class="checkbox-item" data-stajyer-id="@stajyer.Id">
                                            <input type="checkbox"
                                                   name="SeciliStajyerler"
                                                   value="@stajyer.Id"
                                                   id="stajyer_@stajyer.Id"
                                                   class="stajyer-checkbox" />
                                            <label for="stajyer_@stajyer.Id">
                                                👤 @stajyer.AdSoyad
                                            </label>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <div class="no-students">
                                        <div class="no-students-icon">😔</div>
                                        <h4>Aktif Stajyer Bulunamadı</h4>
                                        <p>Şu anda onaylanmış ve aktif durumda olan stajyer bulunmuyor.</p>
                                        <p><strong>Önce stajyer başvurularını onaylayın.</strong></p>
                                    </div>
                                }
                            </div>

                            <!-- Seçim Bilgisi -->
                            <div class="selection-info" id="secimBilgisi">
                                <strong>Seçilen Stajyer Sayısı: <span id="secimSayisiSpan">0</span></strong>
                                <div style="font-size: 0.9rem; margin-top: 0.5rem;">
                                    Eğitim bu stajyerlere atanacak ve bildirim gönderilecek.
                                </div>
                            </div>

                            <span asp-validation-for="SeciliStajyerler" class="text-danger"></span>
                        </div>

                        <!-- Form Aksiyonları -->
                        <div class="form-actions">
                            <a href="@Url.Action("EgitimYonetimi", "Egitmen")" class="btn btn-secondary">
                                ↩️ İptal Et
                            </a>
                            <button type="submit" class="btn btn-primary" id="submitBtn">
                                📆 Eğitimi Oluştur
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </main>
    </div>

    <script>
        let sidebarState = 'expanded';

        document.addEventListener('DOMContentLoaded', function() {
            updateSidebarClasses();

            // Handle window resize
            window.addEventListener('resize', function() {
                if (window.innerWidth <= 1024) {
                    if (sidebarState !== 'collapsed') {
                        sidebarState = 'collapsed';
                        updateSidebarClasses();
                    }
                }
            });

            // Alert mesajlarını otomatik gizle
            const alerts = document.querySelectorAll('.alert');
            alerts.forEach(alert => {
                setTimeout(() => {
                    alert.style.opacity = '0';
                    setTimeout(() => {
                        alert.style.display = 'none';
                    }, 300);
                }, 6000);
            });

            // Element referansları
            const hepsiniSecBtn = document.getElementById('hepsiniSecBtn');
            const hepsiniKaldirBtn = document.getElementById('hepsiniKaldirBtn');
            const checkboxlar = document.querySelectorAll('.stajyer-checkbox');
            const secimSayisiSpan = document.getElementById('secimSayisiSpan');
            const submitBtn = document.getElementById('submitBtn');
            const tarihInput = document.querySelector('input[type="date"]');

            // Bugünün tarihi - geçmiş tarih seçilemesin
            const bugun = new Date().toISOString().split('T')[0];
            if (tarihInput) {
                tarihInput.min = bugun;
                // Eğer tarih boşsa, bugünü varsayılan olarak ayarla
                if (!tarihInput.value) {
                    tarihInput.value = bugun;
                }
            }

            // Seçim sayısını güncelleme fonksiyonu
            function secimSayisiniGuncelle() {
                const secilenSayi = document.querySelectorAll('.stajyer-checkbox:checked').length;
                const toplamSayi = checkboxlar.length;

                secimSayisiSpan.textContent = secilenSayi;

                // Buton durumlarını güncelle
                if (hepsiniSecBtn) {
                    hepsiniSecBtn.style.opacity = secilenSayi === toplamSayi ? '0.5' : '1';
                    hepsiniSecBtn.disabled = secilenSayi === toplamSayi;
                }

                if (hepsiniKaldirBtn) {
                    hepsiniKaldirBtn.style.opacity = secilenSayi === 0 ? '0.5' : '1';
                    hepsiniKaldirBtn.disabled = secilenSayi === 0;
                }

                // Submit buton durumu
                if (submitBtn) {
                    if (secilenSayi === 0) {
                        submitBtn.style.opacity = '0.6';
                        submitBtn.style.cursor = 'not-allowed';
                    } else {
                        submitBtn.style.opacity = '1';
                        submitBtn.style.cursor = 'pointer';
                    }
                }

                // Checkbox item'ların stilini güncelle
                document.querySelectorAll('.checkbox-item').forEach(item => {
                    const checkbox = item.querySelector('input[type="checkbox"]');
                    if (checkbox && checkbox.checked) {
                        item.classList.add('selected');
                    } else {
                        item.classList.remove('selected');
                    }
                });
            }

            // Hepsini seç butonu
            if (hepsiniSecBtn) {
                hepsiniSecBtn.addEventListener('click', function() {
                    checkboxlar.forEach(checkbox => {
                        checkbox.checked = true;
                    });
                    secimSayisiniGuncelle();
                });
            }

            // Seçimi temizle butonu
            if (hepsiniKaldirBtn) {
                hepsiniKaldirBtn.addEventListener('click', function() {
                    checkboxlar.forEach(checkbox => {
                        checkbox.checked = false;
                    });
                    secimSayisiniGuncelle();
                });
            }

            // Her checkbox değiştiğinde sayıyı güncelle
            checkboxlar.forEach(checkbox => {
                checkbox.addEventListener('change', secimSayisiniGuncelle);
            });

            // Checkbox item'a tıklandığında toggle et
            document.querySelectorAll('.checkbox-item').forEach(item => {
                item.addEventListener('click', function(e) {
                    // Eğer tıklanan yer checkbox veya label değilse
                    if (e.target.type !== 'checkbox' && e.target.tagName !== 'LABEL') {
                        const checkbox = item.querySelector('input[type="checkbox"]');
                        if (checkbox) {
                            checkbox.checked = !checkbox.checked;
                            secimSayisiniGuncelle();
                        }
                    }
                });
            });

            // Form submit kontrolü
            const egitimForm = document.getElementById('egitimForm');
            if (egitimForm) {
                egitimForm.addEventListener('submit', function(e) {
                    const secilenSayi = document.querySelectorAll('.stajyer-checkbox:checked').length;

                    if (secilenSayi === 0) {
                        e.preventDefault();
                        alert('❌ En az bir stajyer seçmelisiniz!\n\nEğitim oluşturmak için stajyer seçimi zorunludur.');
                        return false;
                    }

                    // Submit butonunu devre dışı bırak
                    submitBtn.disabled = true;
                    submitBtn.innerHTML = '⏳ Oluşturuluyor...';
                    submitBtn.style.opacity = '0.6';
                });
            }

            // Form alanlarının real-time validasyonu
            const egitimAdiInput = document.querySelector('input[name="EgitimAdi"]');
            if (egitimAdiInput) {
                egitimAdiInput.addEventListener('input', function() {
                    if (this.value.trim().length < 3) {
                        this.style.borderColor = '#dc3545';
                    } else {
                        this.style.borderColor = '#4caf50';
                    }
                });
            }

            // Sayfa yüklendiğinde başlangıç durumu
            secimSayisiniGuncelle();

            console.log('📆 YeniEgitim sayfası yüklendi');
            console.log('📊 Toplam stajyer sayısı:', checkboxlar.length);
        });

        function toggleSidebar() {
            const isDesktop = window.innerWidth > 1024;

            if (isDesktop) {
                // Desktop: toggle between collapsed and expanded
                sidebarState = sidebarState === 'collapsed' ? 'expanded' : 'collapsed';
            } else {
                // Mobile: toggle between hidden and visible
                sidebarState = sidebarState === 'collapsed' ? 'expanded' : 'collapsed';
            }

            updateSidebarClasses();
        }

        function closeSidebar() {
            if (window.innerWidth <= 1024) {
                sidebarState = 'collapsed';
                updateSidebarClasses();
            }
        }

        function updateSidebarClasses() {
            const sidebar = document.getElementById('sidebar');
            const layoutContainer = document.getElementById('layoutContainer');
            const hamburger = document.querySelector('.hamburger-menu');
            const overlay = document.querySelector('.sidebar-overlay');

            // Reset all classes
            sidebar.classList.remove('active', 'collapsed');
            layoutContainer.classList.remove('sidebar-collapsed');
            hamburger.classList.remove('active');
            overlay.classList.remove('active');

            if (window.innerWidth <= 1024) {
                // Mobile behavior
                if (sidebarState === 'expanded') {
                    sidebar.classList.add('active');
                    overlay.classList.add('active');
                    hamburger.classList.add('active');
                } else {
                    sidebar.classList.add('collapsed');
                }
            } else {
                // Desktop behavior
                if (sidebarState === 'collapsed') {
                    sidebar.classList.add('collapsed');
                    layoutContainer.classList.add('sidebar-collapsed');
                } else {
                    hamburger.classList.add('active');
                }
            }
        }

        // Handle clicks outside sidebar on mobile
        document.addEventListener('click', function(event) {
            if (window.innerWidth <= 1024 && sidebarState === 'expanded') {
                const sidebar = document.getElementById('sidebar');
                const hamburger = document.querySelector('.hamburger-menu');

                if (!sidebar.contains(event.target) && !hamburger.contains(event.target)) {
                    closeSidebar();
                }
            }
        });

        // Prevent sidebar from closing when clicking inside it
        document.getElementById('sidebar').addEventListener('click', function(event) {
            event.stopPropagation();
        });

        // Sidebar animation
        document.querySelectorAll('.sidebar a').forEach(link => {
            link.addEventListener('mouseenter', function() {
                if (!document.querySelector('.sidebar').classList.contains('collapsed')) {
                    this.style.transform = 'translateX(8px)';
                }
            });

            link.addEventListener('mouseleave', function() {
                this.style.transform = 'translateX(0)';
            });
        });
    </script>
</body>
</html>