@using StajyerTakipSistemi.Models.ViewModels
@model List<BasvuruDegerlendirmeViewModel>
@{
    ViewData["Title"] = "Başvuru Değerlendirme";
    Layout = null;
}

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Başvuru Değerlendirme</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 30%, #dee2e6 100%);
            min-height: 100vh;
            position: relative;
        }

        /* Animated background particles */
        .bg-animation {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            overflow: hidden;
            z-index: 0;
            pointer-events: none;
        }

        .particle {
            position: absolute;
            background: radial-gradient(circle, rgba(46, 125, 50, 0.3), rgba(27, 94, 32, 0.1));
            border-radius: 50%;
            animation: floatAndFade 8s ease-in-out infinite;
        }

            .particle:nth-child(1) {
                width: 100px;
                height: 100px;
                left: 15%;
                top: 20%;
                animation-delay: 0s;
            }

            .particle:nth-child(2) {
                width: 80px;
                height: 80px;
                left: 75%;
                top: 60%;
                animation-delay: 3s;
            }

            .particle:nth-child(3) {
                width: 120px;
                height: 120px;
                left: 85%;
                top: 10%;
                animation-delay: 6s;
            }

        @@keyframes floatAndFade {
            0%

        {
            opacity: 0;
            transform: translateY(20px) scale(0.8);
        }

        25% {
            opacity: 0.4;
            transform: translateY(-10px) scale(1);
        }

        50% {
            opacity: 0.6;
            transform: translateY(-20px) scale(1.1);
        }

        75% {
            opacity: 0.3;
            transform: translateY(-15px) scale(0.9);
        }

        100% {
            opacity: 0;
            transform: translateY(10px) scale(0.7);
        }

        }

        .header {
            background: #2d5016;
            color: white;
            padding: 1rem 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 4px 20px rgba(45, 80, 22, 0.4);
            position: relative;
            z-index: 999;
            height: 70px;
        }

            .header h1 {
                font-size: 1.5rem;
                font-weight: 600;
                margin: 0;
                color: white;
            }

        .user-info {
            display: flex;
            align-items: center;
            gap: 15px;
            color: white;
        }

        .user-avatar {
            width: 35px;
            height: 35px;
            background: white;
            color: #2d5016;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
        }

        .logout-btn {
            background: white;
            color: #2d5016;
            border: 1px solid rgba(255, 255, 255, 0.3);
            padding: 8px 16px;
            border-radius: 20px;
            text-decoration: none;
            font-size: 0.9rem;
            font-weight: 500;
            transition: all 0.3s ease;
        }

            .logout-btn:hover {
                background: rgba(255, 255, 255, 0.9);
                color: #2d5016;
                text-decoration: none;
                transform: translateY(-2px);
            }

        /* Hamburger Menu */
        .hamburger-menu {
            position: fixed;
            top: 80px;
            left: 20px;
            z-index: 1000;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border: none;
            border-radius: 12px;
            padding: 15px;
            cursor: pointer;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            width: 50px;
            height: 50px;
        }

            .hamburger-menu:hover {
                background: rgba(255, 255, 255, 1);
                transform: scale(1.05);
            }

        .hamburger-icon {
            width: 24px;
            height: 18px;
            position: relative;
            transition: 0.3s ease-in-out;
        }

            .hamburger-icon span {
                display: block;
                position: absolute;
                height: 3px;
                width: 100%;
                background: #2d5016;
                border-radius: 3px;
                transition: 0.3s ease-in-out;
            }

                .hamburger-icon span:nth-child(1) {
                    top: 0px;
                }

                .hamburger-icon span:nth-child(2) {
                    top: 7px;
                }

                .hamburger-icon span:nth-child(3) {
                    top: 14px;
                }

        /* Hamburger animasyonu */
        .hamburger-menu.active .hamburger-icon span:nth-child(1) {
            top: 7px;
            transform: rotate(135deg);
        }

        .hamburger-menu.active .hamburger-icon span:nth-child(2) {
            opacity: 0;
            left: -60px;
        }

        .hamburger-menu.active .hamburger-icon span:nth-child(3) {
            top: 7px;
            transform: rotate(-135deg);
        }

        /* Layout container */
        .layout-container {
            display: flex;
            height: calc(100vh - 70px);
            position: relative;
            transition: all 0.3s ease;
        }

        /* Sidebar */
        .sidebar {
            width: 280px;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            box-shadow: 2px 0 15px rgba(0, 0, 0, 0.1);
            border-right: 1px solid rgba(76, 175, 80, 0.2);
            transition: all 0.3s ease;
            position: relative;
            z-index: 998;
            overflow-y: auto;
            padding-top: 5rem;
        }

            /* Sidebar kapalı*/
            .sidebar.collapsed {
                width: 80px;
            }

                .sidebar.collapsed .menu-text {
                    display: none;
                }

                .sidebar.collapsed a {
                    justify-content: center;
                    padding: 18px 12px;
                }

                    .sidebar.collapsed a span:first-child {
                        margin: 0;
                        font-size: 1.3rem;
                    }

            /* Sidebar menü stilleri  */
            .sidebar ul {
                list-style: none;
                padding: 0 1rem;
                margin: 0;
            }

            .sidebar li {
                margin-bottom: 8px;
            }

            .sidebar a {
                text-decoration: none;
                color: #333;
                display: flex;
                align-items: center;
                gap: 12px;
                font-weight: 500;
                transition: all 0.3s;
                padding: 16px 18px;
                border-radius: 12px;
                white-space: nowrap;
            }

                .sidebar a:hover {
                    color: #2e7d32;
                    background: rgba(76, 175, 80, 0.1);
                }

            .sidebar .active {
                color: #2e7d32 !important;
                font-weight: 600;
                background: rgba(76, 175, 80, 0.15);
                border-left: 3px solid #4caf50;
            }

        /* Sidebar overlay */
        .sidebar-overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 997;
            transition: opacity 0.3s ease;
        }

            .sidebar-overlay.active {
                display: block;
            }

        /* Main content */
        .main-content {
            flex: 1;
            overflow-y: auto;
            transition: all 0.3s ease;
            position: relative;
        }

        /* Content padding  */
        .content-wrapper {
            padding: 2rem;
            margin-left: 80px;
            transition: all 0.3s ease;
        }

        .layout-container:not(.sidebar-collapsed) .content-wrapper {
            margin-left: 0;
            padding: 2rem 2rem 2rem 1rem;
        }

        .page-header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(76, 175, 80, 0.2);
            border-left: 5px solid #D4A017;
        }

        .page-title {
            font-size: clamp(1.5rem, 4vw, 2.2rem);
            color: #D4A017;
            margin: 0 0 0.5rem 0;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .page-subtitle {
            color: #666;
            font-size: clamp(0.9rem, 2.5vw, 1.1rem);
            line-height: 1.6;
        }

        .stats-row {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .stat-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            padding: 1.5rem;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(76, 175, 80, 0.2);
            transition: all 0.3s ease;
        }

            .stat-card:hover {
                transform: translateY(-8px);
                box-shadow: 0 20px 40px rgba(76, 175, 80, 0.2);
            }

        .stat-number {
            font-size: clamp(1.5rem, 4vw, 2.5rem);
            font-weight: bold;
            background: linear-gradient(135deg, #4caf50, #2e7d32);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 0.5rem;
        }

        .stat-label {
            color: #666;
            font-size: clamp(0.8rem, 2vw, 1rem);
        }

        .filters-section {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 1.5rem;
            margin-bottom: 2rem;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(76, 175, 80, 0.2);
        }

        .filters-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
        }

        .filter-group {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }

            .filter-group label {
                font-weight: 500;
                color: #1b5e20;
                font-size: 0.9rem;
            }

            .filter-group select, .filter-group input {
                padding: 0.5rem;
                border: 2px solid rgba(76, 175, 80, 0.3);
                border-radius: 12px;
                font-size: 0.9rem;
                transition: border-color 0.3s;
                background: rgba(255, 255, 255, 0.8);
            }

                .filter-group select:focus, .filter-group input:focus {
                    outline: none;
                    border-color: #4caf50;
                    background: white;
                }

        .applications-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 1.5rem;
        }

        .application-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 1.5rem;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(76, 175, 80, 0.2);
            transition: all 0.3s ease;
        }

            .application-card:hover {
                transform: translateY(-8px);
                box-shadow: 0 20px 40px rgba(76, 175, 80, 0.2);
                border-color: #4caf50;
            }

        .applicant-header {
            display: flex;
            align-items: center;
            gap: 1rem;
            margin-bottom: 1rem;
            padding-bottom: 1rem;
            border-bottom: 1px solid rgba(76, 175, 80, 0.1);
        }

        .applicant-photo {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            background: linear-gradient(135deg, #4caf50, #2e7d32);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: bold;
            font-size: 1.2rem;
            flex-shrink: 0;
        }

        .applicant-info h3 {
            margin: 0 0 0.3rem 0;
            color: #1b5e20;
            font-size: 1.2rem;
        }

        .applicant-meta {
            color: #666;
            font-size: 0.8rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .time-badge {
            background: rgba(33, 150, 243, 0.15);
            color: #1976d2;
            padding: 2px 8px;
            border-radius: 12px;
            font-size: 0.7rem;
            font-weight: 500;
        }

        .application-details {
            margin-bottom: 1rem;
        }

        .detail-row {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.5rem 0;
            border-bottom: 1px solid rgba(76, 175, 80, 0.1);
        }

            .detail-row:last-child {
                border-bottom: none;
            }

        .detail-label {
            color: #1b5e20;
            font-size: 0.9rem;
            font-weight: 500;
        }

        .detail-value {
            color: #333;
            font-size: 0.9rem;
            text-align: right;
        }

        .internship-type {
            display: inline-block;
            padding: 0.3rem 0.8rem;
            border-radius: 15px;
            font-size: 0.8rem;
            font-weight: 500;
        }

        .type-zorunlu {
            background: rgba(244, 67, 54, 0.15);
            color: #c62828;
        }

        .type-gonullu {
            background: rgba(76, 175, 80, 0.15);
            color: #2e7d32;
        }

        .action-buttons {
            display: grid;
            grid-template-columns: 1fr 1fr 1fr;
            gap: 0.8rem;
            margin-top: 1.5rem;
            padding-top: 1rem;
            border-top: 1px solid rgba(76, 175, 80, 0.1);
        }

        .btn {
            padding: 0.8rem 1rem;
            border: none;
            border-radius: 12px;
            font-size: 0.9rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s;
            text-decoration: none;
            text-align: center;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }

        .btn-approve {
            background: linear-gradient(135deg, #4caf50, #2e7d32);
            color: white;
        }

            .btn-approve:hover {
                background: linear-gradient(135deg, #2e7d32, #1b5e20);
                transform: translateY(-2px);
                color: white;
                text-decoration: none;
                box-shadow: 0 4px 15px rgba(76, 175, 80, 0.4);
            }

        .btn-reject {
            background: linear-gradient(135deg, #f44336, #d32f2f);
            color: white;
        }

            .btn-reject:hover {
                background: linear-gradient(135deg, #d32f2f, #c62828);
                transform: translateY(-2px);
                color: white;
                text-decoration: none;
                box-shadow: 0 4px 15px rgba(244, 67, 54, 0.4);
            }

        .btn-detail {
            background: linear-gradient(135deg, #6c757d, #495057);
            color: white;
        }

            .btn-detail:hover {
                background: linear-gradient(135deg, #495057, #343a40);
                transform: translateY(-2px);
                color: white;
                text-decoration: none;
                box-shadow: 0 4px 15px rgba(108, 117, 125, 0.4);
            }

        .alert {
            padding: 1rem;
            border-radius: 12px;
            margin-bottom: 1rem;
        }

        .alert-success {
            background: rgba(76, 175, 80, 0.15);
            color: #2e7d32;
            border: 1px solid rgba(76, 175, 80, 0.3);
        }

        .empty-state {
            text-align: center;
            padding: 3rem;
            color: #666;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(76, 175, 80, 0.2);
        }

        .empty-state-icon {
            font-size: 4rem;
            margin-bottom: 1rem;
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.5);
            z-index: 1000;
        }

        .modal-content {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: white;
            padding: 2rem;
            border-radius: 20px;
            min-width: 400px;
            max-width: 500px;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
        }

        .modal-header {
            margin-bottom: 1rem;
            padding-bottom: 1rem;
            border-bottom: 1px solid rgba(76, 175, 80, 0.2);
        }

        .modal-title {
            margin: 0;
            color: #1b5e20;
        }

        .form-group {
            margin-bottom: 1rem;
        }

            .form-group label {
                display: block;
                margin-bottom: 0.5rem;
                font-weight: 500;
                color: #1b5e20;
            }

            .form-group textarea {
                width: 100%;
                padding: 0.75rem;
                border: 2px solid rgba(76, 175, 80, 0.3);
                border-radius: 12px;
                font-family: inherit;
                resize: vertical;
                min-height: 100px;
            }

                .form-group textarea:focus {
                    outline: none;
                    border-color: #4caf50;
                }

        .modal-actions {
            display: flex;
            gap: 1rem;
            justify-content: flex-end;
            margin-top: 1.5rem;
        }

        /* Responsive */
        @@media (max-width: 1024px) {
            .sidebar

        {
            position: fixed;
            top: 70px;
            left: 0;
            height: calc(100vh - 70px);
            width: 280px;
            z-index: 998;
            transform: translateX(-100%);
            padding-top: 1rem;
        }

        .sidebar.active {
            transform: translateX(0);
        }

        .sidebar.collapsed {
            width: 280px;
        }

        .content-wrapper {
            margin-left: 80px !important;
            padding: 1rem !important;
        }

        .applications-grid {
            grid-template-columns: 1fr;
        }

        .stats-row {
            grid-template-columns: repeat(2, 1fr);
        }

        .action-buttons {
            grid-template-columns: 1fr;
        }

        }

        @@media (max-width: 768px) {
            .header

        {
            padding: 1rem;
        }

        .header h1 {
            font-size: 1.2rem;
        }

        .user-info span {
            display: none;
        }

        .content-wrapper {
            margin-left: 80px !important;
            padding: 1rem;
        }

        .applications-grid {
            grid-template-columns: 1fr;
        }

        .stats-row {
            grid-template-columns: repeat(2, 1fr);
        }

        .page-header {
            padding: 1.5rem;
        }

        }

        @@media (max-width: 480px) {
            .hamburger-menu

        {
            left: 10px;
            top: 75px;
        }

        .content-wrapper {
            margin-left: 70px !important;
            padding: 0.8rem;
        }

        .stats-row {
            grid-template-columns: 1fr;
        }

        }

        /* Animation keyframes */
        @@keyframes pageLoad {
            0%

        {
            opacity: 0;
            transform: translateY(20px);
        }

        100% {
            opacity: 1;
            transform: translateY(0);
        }

        }

        .layout-container {
            animation: pageLoad 0.8s ease-out forwards;
        }
    </style>
</head>
<body>
    <!-- Animated background -->
    <div class="bg-animation">
        <div class="particle"></div>
        <div class="particle"></div>
        <div class="particle"></div>
    </div>

    <div class="header">
        <h1>🌳 Eğitmen Paneli</h1>
        <div class="user-info">
            <div class="user-avatar">@(ViewBag.UserName?.Substring(0, 1).ToUpper() ?? "E")</div>
            <span>@(ViewBag.UserName ?? "Eğitmen") - Eğitmen</span>
            <a href="@Url.Action("Logout", "Auth")" class="logout-btn">Çıkış Yap</a>
        </div>
    </div>

    <!-- Hamburger Menu Button -->
    <button class="hamburger-menu" onclick="toggleSidebar()">
        <div class="hamburger-icon">
            <span></span>
            <span></span>
            <span></span>
        </div>
    </button>

    <!-- Overlay for mobile -->
    <div class="sidebar-overlay" onclick="closeSidebar()"></div>

    <div class="layout-container" id="layoutContainer">
        <aside class="sidebar" id="sidebar">
            <ul>
                <li><a href="@Url.Action("Index", "Egitmen")"><span>🏠</span> <span class="menu-text">Ana Sayfa</span></a></li>
                <li><a href="@Url.Action("StajyerListesi", "Egitmen")"><span>👥</span> <span class="menu-text">Stajyer Listesi</span></a></li>
                <li><a href="@Url.Action("BasvuruDegerlendirme", "Egitmen")" class="active"><span>📝</span> <span class="menu-text">Başvuru Değerlendirme</span></a></li>
                <li><a href="@Url.Action("OdevAtama", "Egitmen")"><span>✨</span> <span class="menu-text">Ödev Yönetimi</span></a></li>
                <li><a href="@Url.Action("EgitimYonetimi", "Egitmen")"><span>📆</span> <span class="menu-text">Eğitim & Toplantı Yönetimi</span></a></li>
                <li><a href="@Url.Action("DuyuruYonetimi", "Egitmen")"><span>📭</span> <span class="menu-text">Duyuru Yönetimi</span></a></li>
            </ul>
        </aside>

        <main class="main-content" id="mainContent">
            <div class="content-wrapper">
                <div class="page-header">
                    <h2 class="page-title">📝 Başvuru Değerlendirme</h2>
                    <p class="page-subtitle">Bekleyen başvuruları incele, onay veya ret kararı ver</p>
                </div>

                @if (TempData["Success"] != null)
                {
                    <div class="alert alert-success">
                        @TempData["Success"]
                    </div>
                }

                <!-- İstatistikler -->
                <div class="stats-row">
                    <div class="stat-card">
                        <div class="stat-number">@Model.Count</div>
                        <div class="stat-label">Bekleyen Başvuru</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number">@Model.Count(b => b.StajTuru == "Zorunlu Staj")</div>
                        <div class="stat-label">Zorunlu Staj</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number">@Model.Count(b => b.StajTuru == "Gönüllü Staj")</div>
                        <div class="stat-label">Gönüllü Staj</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number">
                            @{
                                var bugünBasvuranlar = Model.Where(b => b.BasvuruTarihi.Date == DateTime.Today).Count();
                            }
                            @bugünBasvuranlar
                        </div>
                        <div class="stat-label">Bugün Başvuran</div>
                    </div>
                </div>

                <!-- Filtreler -->
                <div class="filters-section">
                    <div class="filters-grid">
                        <div class="filter-group">
                            <label>Okul</label>
                            <select id="okulFilter">
                                <option value="">Tümü</option>
                                @foreach (var okul in Model.Select(m => m.OkulAdi).Distinct())
                                {
                                    <option value="@okul">@okul</option>
                                }
                            </select>
                        </div>
                        <div class="filter-group">
                            <label>Başvuru Tarihi</label>
                            <select id="tarihFilter">
                                <option value="">Tümü</option>
                                <option value="bugün">Bugün</option>
                                <option value="dün">Dün</option>
                                <option value="bu_hafta">Bu Hafta</option>
                            </select>
                        </div>
                        <div class="filter-group">
                            <label>Arama</label>
                            <input type="text" id="aramaFilter" placeholder="Ad, soyad veya email ara...">
                        </div>
                    </div>
                </div>

                <!-- Başvuru Kartları -->
                @if (Model.Any())
                {
                    <div class="applications-grid">
                        @foreach (var basvuru in Model)
                        {
                            <div class="application-card" data-staj-turu="@basvuru.StajTuru" data-okul="@basvuru.OkulAdi" data-tarih="@basvuru.BasvuruTarihi.ToString("yyyy-MM-dd")" data-arama="@basvuru.AdSoyad @basvuru.Email">
                                <div class="applicant-header">
                                    <div class="applicant-photo">
                                        @(basvuru.AdSoyad.Split(' ')[0].Substring(0, 1))@(basvuru.AdSoyad.Split(' ').Length > 1 ? basvuru.AdSoyad.Split(' ')[1].Substring(0, 1) : "")
                                    </div>
                                    <div class="applicant-info">
                                        <h3>@basvuru.AdSoyad</h3>
                                        <div class="applicant-meta">
                                            <span>📧 @basvuru.Email</span>
                                            <span class="time-badge">
                                                @{
                                                    var gecenSure = DateTime.Now - basvuru.BasvuruTarihi;
                                                    var zaman = gecenSure.Days > 0 ? $"{gecenSure.Days} gün önce" :
                                                    gecenSure.Hours > 0 ? $"{gecenSure.Hours} saat önce" :
                                                    "Az önce";
                                                }
                                                @zaman
                                            </span>
                                        </div>
                                    </div>
                                </div>

                                <div class="application-details">
                                    <div class="detail-row">
                                        <span class="detail-label">📱 Telefon:</span>
                                        <span class="detail-value">@basvuru.Telefon</span>
                                    </div>
                                    <div class="detail-row">
                                        <span class="detail-label">🎓 Okul:</span>
                                        <span class="detail-value">@basvuru.OkulAdi</span>
                                    </div>
                                    <div class="detail-row">
                                        <span class="detail-label">📚 Bölüm:</span>
                                        <span class="detail-value">@basvuru.Bolum</span>
                                    </div>
                                    <div class="detail-row">
                                        <span class="detail-label">🎯 Sınıf:</span>
                                        <span class="detail-value">@basvuru.Sinif. Sınıf</span>
                                    </div>
                                    <div class="detail-row">
                                        <span class="detail-label">📋 Staj Türü:</span>
                                        <span class="detail-value">
                                            <span class="internship-type type-@(basvuru.StajTuru == "Zorunlu Staj" ? "zorunlu" : "gonullu")">
                                                @basvuru.StajTuru
                                            </span>
                                        </span>
                                    </div>
                                    <div class="detail-row">
                                        <span class="detail-label">📅 Staj Dönemi:</span>
                                        <span class="detail-value">
                                            @basvuru.StajBaslangicTarihi.ToString("dd/MM/yyyy") - @basvuru.StajBitisTarihi.ToString("dd/MM/yyyy")
                                        </span>
                                    </div>
                                </div>

                                <div class="action-buttons">
                                    <button type="button" class="btn btn-approve" onclick="document.getElementById('form-@basvuru.Id').submit();">✅ Onayla</button>
                                    <button class="btn btn-reject" onclick="openRejectModal(@basvuru.Id, '@basvuru.AdSoyad')">❌ Reddet</button>
                                    <a href="@Url.Action("BasvuruDetay", "Egitmen", new { id = basvuru.Id })" class="btn btn-detail">👁️ Detay</a>
                                </div>
                                <form id="form-@basvuru.Id" method="post" asp-action="BasvuruOnayla" style="display: none;">
                                    <input type="hidden" name="userId" value="@basvuru.Id" />
                                </form>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="empty-state">
                        <div class="empty-state-icon">📭</div>
                        <h3>Bekleyen başvuru bulunmuyor</h3>
                        <p>Şu anda değerlendirme bekleyen bir başvuru yok.</p>
                    </div>
                }
            </div>
        </main>
    </div>

    <!-- Red Nedeni Modal -->
    <div id="rejectModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Başvuruyu Reddet</h3>
            </div>
            <form method="post" asp-action="BasvuruReddet">
                <input type="hidden" id="rejectUserId" name="userId" />
                <div class="form-group">
                    <label>Ret Nedeni:</label>
                    <textarea name="redNedeni" placeholder="Başvurunun reddedilme nedenini açıklayın..." required></textarea>
                </div>
                <div class="modal-actions">
                    <button type="button" class="btn btn-detail" onclick="closeRejectModal()">İptal</button>
                    <button type="submit" class="btn btn-reject">Reddet</button>
                </div>
            </form>
        </div>
    </div>

    <script>
        let sidebarState = 'expanded';

        document.addEventListener('DOMContentLoaded', function() {
            updateSidebarClasses();

            // Handle window resize
            window.addEventListener('resize', function() {
                if (window.innerWidth <= 1024) {
                    if (sidebarState !== 'collapsed') {
                        sidebarState = 'collapsed';
                        updateSidebarClasses();
                    }
                }
            });
        });

        function toggleSidebar() {
            const isDesktop = window.innerWidth > 1024;

            if (isDesktop) {
                // Desktop: toggle between collapsed and expanded
                sidebarState = sidebarState === 'collapsed' ? 'expanded' : 'collapsed';
            } else {
                // Mobile: toggle between hidden and visible
                sidebarState = sidebarState === 'collapsed' ? 'expanded' : 'collapsed';
            }

            updateSidebarClasses();
        }

        function closeSidebar() {
            if (window.innerWidth <= 1024) {
                sidebarState = 'collapsed';
                updateSidebarClasses();
            }
        }

        function updateSidebarClasses() {
            const sidebar = document.getElementById('sidebar');
            const layoutContainer = document.getElementById('layoutContainer');
            const hamburger = document.querySelector('.hamburger-menu');
            const overlay = document.querySelector('.sidebar-overlay');

            // Reset all classes
            sidebar.classList.remove('active', 'collapsed');
            layoutContainer.classList.remove('sidebar-collapsed');
            hamburger.classList.remove('active');
            overlay.classList.remove('active');

            if (window.innerWidth <= 1024) {
                // Mobile behavior
                if (sidebarState === 'expanded') {
                    sidebar.classList.add('active');
                    overlay.classList.add('active');
                    hamburger.classList.add('active');
                } else {
                    sidebar.classList.add('collapsed');
                }
            } else {
                // Desktop behavior
                if (sidebarState === 'collapsed') {
                    sidebar.classList.add('collapsed');
                    layoutContainer.classList.add('sidebar-collapsed');
                } else {
                    hamburger.classList.add('active');
                }
            }
        }

        // Handle clicks outside sidebar on mobile
        document.addEventListener('click', function(event) {
            if (window.innerWidth <= 1024 && sidebarState === 'expanded') {
                const sidebar = document.getElementById('sidebar');
                const hamburger = document.querySelector('.hamburger-menu');

                if (!sidebar.contains(event.target) && !hamburger.contains(event.target)) {
                    closeSidebar();
                }
            }
        });

        // Prevent sidebar from closing when clicking inside it
        document.getElementById('sidebar').addEventListener('click', function(event) {
            event.stopPropagation();
        });

        // Hover animations
        document.querySelectorAll('.stat-card').forEach(card => {
            card.addEventListener('mouseenter', function() {
                this.style.transform = 'translateY(-10px) scale(1.02)';
            });

            card.addEventListener('mouseleave', function() {
                this.style.transform = 'translateY(0) scale(1)';
            });
        });

        // Sidebar animation
        document.querySelectorAll('.sidebar a').forEach(link => {
            link.addEventListener('mouseenter', function() {
                if (!document.querySelector('.sidebar').classList.contains('collapsed')) {
                    this.style.transform = 'translateX(8px)';
                }
            });

            link.addEventListener('mouseleave', function() {
                this.style.transform = 'translateX(0)';
            });
        });

        // Filtreleme
        document.getElementById('stajTuruFilter').addEventListener('change', filterApplications);
        document.getElementById('okulFilter').addEventListener('change', filterApplications);
        document.getElementById('tarihFilter').addEventListener('change', filterApplications);
        document.getElementById('aramaFilter').addEventListener('input', filterApplications);

        function filterApplications() {
            const stajTuru = document.getElementById('stajTuruFilter').value;
            const okul = document.getElementById('okulFilter').value;
            const tarih = document.getElementById('tarihFilter').value;
            const arama = document.getElementById('aramaFilter').value.toLowerCase();

            const cards = document.querySelectorAll('.application-card');

            cards.forEach(card => {
                let show = true;

                // Staj türü filtresi
                if (stajTuru && !card.dataset.stajTuru.includes(stajTuru)) {
                    show = false;
                }

                // Okul filtresi
                if (okul && card.dataset.okul !== okul) {
                    show = false;
                }

                // Tarih filtresi
                if (tarih) {
                    const cardDate = new Date(card.dataset.tarih);
                    const today = new Date();

                    if (tarih === 'bugün' && cardDate.toDateString() !== today.toDateString()) {
                        show = false;
                    } else if (tarih === 'dün') {
                        const yesterday = new Date(today);
                        yesterday.setDate(yesterday.getDate() - 1);
                        if (cardDate.toDateString() !== yesterday.toDateString()) {
                            show = false;
                        }
                    } else if (tarih === 'bu_hafta') {
                        const weekAgo = new Date(today);
                        weekAgo.setDate(weekAgo.getDate() - 7);
                        if (cardDate < weekAgo) {
                            show = false;
                        }
                    }
                }

                // Arama filtresi
                if (arama && !card.dataset.arama.toLowerCase().includes(arama)) {
                    show = false;
                }

                card.style.display = show ? 'block' : 'none';
            });
        }

        // Modal işlemleri
        function openRejectModal(userId, adSoyad) {
            document.getElementById('rejectUserId').value = userId;
            document.querySelector('.modal-title').textContent = `${adSoyad} - Başvuruyu Reddet`;
            document.getElementById('rejectModal').style.display = 'block';
        }

        function closeRejectModal() {
            document.getElementById('rejectModal').style.display = 'none';
        }

        // Modal dışına tıklayınca kapat
        window.onclick = function(event) {
            const modal = document.getElementById('rejectModal');
            if (event.target === modal) {
                closeRejectModal();
            }
        }
    </script>
</body>
</html>
<label>Staj Türü</label>
<select id="stajTuruFilter">
    <option value="">Tümü</option>
    <option value="Zorunlu">Zorunlu Staj</option>
    <option value="Gönüllü">Gönüllü Staj</option>
</select>
</div>
<div class="filter-group">